name: Push

on:
  push:
    branches: [main]

env:
  TF_VERSION: 0.14.7
  TG_VERSION: 0.26.7
  TG_SRC_PATH: terraform
  TFC_WORKSPACE: dev

jobs:
  ci:
    name: ci
    runs-on: ubuntu-20.04
    environment: dev

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Make artifact directory
        run: mkdir -p ./artifacts/${{ github.repository }}

      - name: Finding files and store to output
        id: finding-files
        run: |
          echo "::set-output name=FILELIST::$(ls ./lambda)"

      - name: Install Zip
        uses: montudor/action-zip@v0.1.0

      - name: Processing my found files from output
        run: |
          IFS="," read -a myarray <<< ${{ steps.finding-files.outputs.FILELIST }}
          for i in "${myarray[@]}"; do
            zip -r ./artifacts/${i}.zip ./lambda/${i}
          done

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_DEV }}
          role-duration-seconds: 900
          role-session-name: parks-reso-admin-dev-gh-action
          role-skip-session-tagging: true

      - name: Push Zip to S3
        uses: jakejarvis/s3-sync-action@v0.3.1
        env:
          SOURCE_DIR: './artifacts'
          AWS_REGION: ${{secrets.AWS_REGION}}
          AWS_S3_BUCKET: ${{secrets.AWS_S3_BUCKET}}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TFC_TEAM_TOKEN }}

      - uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}

      - name: Terragrunt Apply
        working-directory: ${{ env.TG_SRC_PATH }}/${{ env.TFC_WORKSPACE }}
        env:
          app_version: ${{ github.run_number }}
        run: terragrunt apply-all --terragrunt-non-interactive